starting build "2011082e-c221-4700-b0ba-8ba10dd1bec1"

FETCHSOURCE
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /workspace/.git/
From https://github.com/MACHANDRA11/cloudbuild_0_repo
 * branch            f07c64db3cbd7536774eca4930acfbcf75635f57 -> FETCH_HEAD
HEAD is now at f07c64d modified
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Finished Step #0
Starting Step #1
Step #1: Already have image (with digest): gcr.io/cloud-builders/git
Step #1: origin	https://github.com/MACHANDRA11/cloudbuild_0_repo.git (fetch)
Step #1: origin	https://github.com/MACHANDRA11/cloudbuild_0_repo.git (push)
Step #1: credential.helper=gcloud.sh
Step #1: user.name=MACHANDRA11
Step #1: user.email=chandrakanth.maddana@mediaagility.com
Step #1: core.repositoryformatversion=0
Step #1: core.filemode=true
Step #1: core.bare=false
Step #1: core.logallrefupdates=true
Step #1: remote.origin.url=git@github.com:MACHANDRA11/cloudbuild_0_repo.git
Step #1: remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
Step #1: credential.helper=gcloud.sh
Step #1: cloudbuild.yaml
Step #1: known_hosts.github
Step #1: tf-1.log
Step #1: tf_copy
Step #1: tf_template_file
Step #1: bigquery.tf
Step #1: main.tf
Step #1: state.tf
Step #1: terraform.tfvars
Step #1: variables.tf
Step #1: module "gcs_buckets" {
Step #1:   source  = "terraform-google-modules/cloud-storage/google"
Step #1:   version = "2.2"
Step #1:   project_id  = var.project_id
Step #1:   names = var.names 
Step #1:   prefix = var.prefix
Step #1: }
Step #1: project_id = "devtools-317213"
Step #1: names = ["thgc112"]
Step #1: prefix = "tfg"
Step #1: dataset_id = "test_dataset_1"Pushing changes to git config repo ...
Step #1: bigquery.tf
Step #1: main.tf
Step #1: state.tf
Step #1: terraform.tfvars
Step #1: variables.tf
Step #1: [master 421d510] Updated with build 2011082e-c221-4700-b0ba-8ba10dd1bec1 from cloudbuild_0_repo commit f07c64db3cbd7536774eca4930acfbcf75635f57
Step #1:  5 files changed, 42 insertions(+)
Step #1:  create mode 100644 tf_copy/bigquery.tf
Step #1:  create mode 100644 tf_copy/main.tf
Step #1:  create mode 100644 tf_copy/state.tf
Step #1:  create mode 100644 tf_copy/terraform.tfvars
Step #1:  create mode 100644 tf_copy/variables.tf
Step #1: Warning: Permanently added the RSA host key for IP address '192.30.255.112' to the list of known hosts.
Step #1: To github.com:MACHANDRA11/cloudbuild_0_repo.git
Step #1:    f07c64d..421d510  master -> master
Finished Step #1
Starting Step #2 - "tf plan and apply"
Step #2 - "tf plan and apply": Pulling image: hashicorp/terraform:1.0.0
Step #2 - "tf plan and apply": 1.0.0: Pulling from hashicorp/terraform
Step #2 - "tf plan and apply": 540db60ca938: Pulling fs layer
Step #2 - "tf plan and apply": a84ab4c8a000: Pulling fs layer
Step #2 - "tf plan and apply": a82f6d5351c2: Pulling fs layer
Step #2 - "tf plan and apply": 540db60ca938: Verifying Checksum
Step #2 - "tf plan and apply": 540db60ca938: Download complete
Step #2 - "tf plan and apply": a84ab4c8a000: Download complete
Step #2 - "tf plan and apply": 540db60ca938: Pull complete
Step #2 - "tf plan and apply": a82f6d5351c2: Verifying Checksum
Step #2 - "tf plan and apply": a82f6d5351c2: Download complete
Step #2 - "tf plan and apply": a84ab4c8a000: Pull complete
Step #2 - "tf plan and apply": a82f6d5351c2: Pull complete
Step #2 - "tf plan and apply": Digest: sha256:6dafbe34b7c18d189ff18e3dfb7cd5fc4144a2714eb2bc7b6dd9352455e8848a
Step #2 - "tf plan and apply": Status: Downloaded newer image for hashicorp/terraform:1.0.0
Step #2 - "tf plan and apply": docker.io/hashicorp/terraform:1.0.0
Step #2 - "tf plan and apply": branch master
Step #2 - "tf plan and apply": run init
Step #2 - "tf plan and apply": Initializing modules...
Step #2 - "tf plan and apply": Downloading terraform-google-modules/cloud-storage/google 2.2.0 for gcs_buckets...
Step #2 - "tf plan and apply": - gcs_buckets in .terraform/modules/gcs_buckets
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Initializing the backend...
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Successfully configured the backend "gcs"! Terraform will automatically
Step #2 - "tf plan and apply": use this backend unless the backend configuration changes.
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Initializing provider plugins...
Step #2 - "tf plan and apply": - Finding hashicorp/google versions matching "~> 3.53"...
Step #2 - "tf plan and apply": - Finding latest version of hashicorp/random...
Step #2 - "tf plan and apply": - Installing hashicorp/random v3.1.0...
Step #2 - "tf plan and apply": - Installed hashicorp/random v3.1.0 (signed by HashiCorp)
Step #2 - "tf plan and apply": - Installing hashicorp/google v3.89.0...
Step #2 - "tf plan and apply": - Installed hashicorp/google v3.89.0 (signed by HashiCorp)
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Terraform has created a lock file .terraform.lock.hcl to record the provider
Step #2 - "tf plan and apply": selections it made above. Include this file in your version control repository
Step #2 - "tf plan and apply": so that Terraform can guarantee to make the same selections by default when
Step #2 - "tf plan and apply": you run "terraform init" in the future.
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Terraform has been successfully initialized!
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": You may now begin working with Terraform. Try running "terraform plan" to see
Step #2 - "tf plan and apply": any changes that are required for your infrastructure. All Terraform commands
Step #2 - "tf plan and apply": should now work.
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": If you ever set or change modules or backend configuration for Terraform,
Step #2 - "tf plan and apply": rerun this command to reinitialize your working directory. If you forget, other
Step #2 - "tf plan and apply": commands will detect it and remind you to do so if necessary.
Step #2 - "tf plan and apply": run validate
Step #2 - "tf plan and apply": Success! The configuration is valid.
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": run plan
Step #2 - "tf plan and apply": module.gcs_buckets.random_id.bucket_suffix: Refreshing state... [id=LxU]
Step #2 - "tf plan and apply": module.gcs_buckets.google_storage_bucket.buckets["thgb112"]: Refreshing state... [id=tfg-eu-thgb112]
Step #2 - "tf plan and apply": google_bigquery_dataset.dataset: Refreshing state... [id=projects/devtools-317213/datasets/test_dataset_0]
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Terraform used the selected providers to generate the following execution
Step #2 - "tf plan and apply": plan. Resource actions are indicated with the following symbols:
Step #2 - "tf plan and apply":   + create
Step #2 - "tf plan and apply":   - destroy
Step #2 - "tf plan and apply": -/+ destroy and then create replacement
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Terraform will perform the following actions:
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":   # google_bigquery_dataset.dataset must be replaced
Step #2 - "tf plan and apply": -/+ resource "google_bigquery_dataset" "dataset" {
Step #2 - "tf plan and apply":       ~ creation_time                   = 1635089005338 -> (known after apply)
Step #2 - "tf plan and apply":       ~ dataset_id                      = "test_dataset_0" -> "test_dataset_1" # forces replacement
Step #2 - "tf plan and apply":       - default_partition_expiration_ms = 0 -> null
Step #2 - "tf plan and apply":       - default_table_expiration_ms     = 0 -> null
Step #2 - "tf plan and apply":       ~ etag                            = "D7KZS3mcK92SR2K+XrlrHA==" -> (known after apply)
Step #2 - "tf plan and apply":       ~ id                              = "projects/devtools-317213/datasets/test_dataset_0" -> (known after apply)
Step #2 - "tf plan and apply":       - labels                          = {} -> null
Step #2 - "tf plan and apply":       ~ last_modified_time              = 1635089005338 -> (known after apply)
Step #2 - "tf plan and apply":       ~ self_link                       = "https://bigquery.googleapis.com/bigquery/v2/projects/devtools-317213/datasets/test_dataset_0" -> (known after apply)
Step #2 - "tf plan and apply":         # (4 unchanged attributes hidden)
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":       - access {
Step #2 - "tf plan and apply":           - role          = "OWNER" -> null
Step #2 - "tf plan and apply":           - user_by_email = "214106339721@cloudbuild.gserviceaccount.com" -> null
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":       - access {
Step #2 - "tf plan and apply":           - role          = "OWNER" -> null
Step #2 - "tf plan and apply":           - special_group = "projectOwners" -> null
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":       - access {
Step #2 - "tf plan and apply":           - role          = "READER" -> null
Step #2 - "tf plan and apply":           - special_group = "projectReaders" -> null
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":       - access {
Step #2 - "tf plan and apply":           - role          = "WRITER" -> null
Step #2 - "tf plan and apply":           - special_group = "projectWriters" -> null
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":       + access {
Step #2 - "tf plan and apply":           + domain         = (known after apply)
Step #2 - "tf plan and apply":           + group_by_email = (known after apply)
Step #2 - "tf plan and apply":           + role           = (known after apply)
Step #2 - "tf plan and apply":           + special_group  = (known after apply)
Step #2 - "tf plan and apply":           + user_by_email  = (known after apply)
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":           + view {
Step #2 - "tf plan and apply":               + dataset_id = (known after apply)
Step #2 - "tf plan and apply":               + project_id = (known after apply)
Step #2 - "tf plan and apply":               + table_id   = (known after apply)
Step #2 - "tf plan and apply":             }
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":     }
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":   # module.gcs_buckets.google_storage_bucket.buckets["thgb112"] will be destroyed
Step #2 - "tf plan and apply":   - resource "google_storage_bucket" "buckets" {
Step #2 - "tf plan and apply":       - bucket_policy_only          = true -> null
Step #2 - "tf plan and apply":       - default_event_based_hold    = false -> null
Step #2 - "tf plan and apply":       - force_destroy               = false -> null
Step #2 - "tf plan and apply":       - id                          = "tfg-eu-thgb112" -> null
Step #2 - "tf plan and apply":       - labels                      = {
Step #2 - "tf plan and apply":           - "name" = "tfg-eu-thgb112"
Step #2 - "tf plan and apply":         } -> null
Step #2 - "tf plan and apply":       - location                    = "EU" -> null
Step #2 - "tf plan and apply":       - name                        = "tfg-eu-thgb112" -> null
Step #2 - "tf plan and apply":       - project                     = "devtools-317213" -> null
Step #2 - "tf plan and apply":       - requester_pays              = false -> null
Step #2 - "tf plan and apply":       - self_link                   = "https://www.googleapis.com/storage/v1/b/tfg-eu-thgb112" -> null
Step #2 - "tf plan and apply":       - storage_class               = "MULTI_REGIONAL" -> null
Step #2 - "tf plan and apply":       - uniform_bucket_level_access = true -> null
Step #2 - "tf plan and apply":       - url                         = "gs://tfg-eu-thgb112" -> null
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":       - versioning {
Step #2 - "tf plan and apply":           - enabled = false -> null
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":     }
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":   # module.gcs_buckets.google_storage_bucket.buckets["thgc112"] will be created
Step #2 - "tf plan and apply":   + resource "google_storage_bucket" "buckets" {
Step #2 - "tf plan and apply":       + bucket_policy_only          = (known after apply)
Step #2 - "tf plan and apply":       + force_destroy               = false
Step #2 - "tf plan and apply":       + id                          = (known after apply)
Step #2 - "tf plan and apply":       + labels                      = {
Step #2 - "tf plan and apply":           + "name" = "tfg-eu-thgc112"
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":       + location                    = "EU"
Step #2 - "tf plan and apply":       + name                        = "tfg-eu-thgc112"
Step #2 - "tf plan and apply":       + project                     = "devtools-317213"
Step #2 - "tf plan and apply":       + self_link                   = (known after apply)
Step #2 - "tf plan and apply":       + storage_class               = "MULTI_REGIONAL"
Step #2 - "tf plan and apply":       + uniform_bucket_level_access = true
Step #2 - "tf plan and apply":       + url                         = (known after apply)
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply":       + versioning {
Step #2 - "tf plan and apply":           + enabled = false
Step #2 - "tf plan and apply":         }
Step #2 - "tf plan and apply":     }
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Plan: 2 to add, 0 to change, 2 to destroy.
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": ─────────────────────────────────────────────────────────────────────────────
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Saved the plan to: terraform.plan
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": To perform exactly these actions, run the following command to apply:
Step #2 - "tf plan and apply":     terraform apply "terraform.plan"

Step #2 - "tf plan and apply": google_bigquery_dataset.dataset: Destroying... [id=projects/devtools-317213/datasets/test_dataset_0]
Step #2 - "tf plan and apply": module.gcs_buckets.google_storage_bucket.buckets["thgb112"]: Destroying... [id=tfg-eu-thgb112]
Step #2 - "tf plan and apply": module.gcs_buckets.google_storage_bucket.buckets["thgc112"]: Creating...
Step #2 - "tf plan and apply": google_bigquery_dataset.dataset: Destruction complete after 0s
Step #2 - "tf plan and apply": google_bigquery_dataset.dataset: Creating...
Step #2 - "tf plan and apply": module.gcs_buckets.google_storage_bucket.buckets["thgb112"]: Destruction complete after 0s
Step #2 - "tf plan and apply": google_bigquery_dataset.dataset: Creation complete after 1s [id=projects/devtools-317213/datasets/test_dataset_1]
Step #2 - "tf plan and apply": module.gcs_buckets.google_storage_bucket.buckets["thgc112"]: Creation complete after 2s [id=tfg-eu-thgc112]
Step #2 - "tf plan and apply": 
Step #2 - "tf plan and apply": Apply complete! Resources: 2 added, 0 changed, 2 destroyed.
Finished Step #2 - "tf plan and apply"
Starting Step #3 - "Destroy Infra"
Step #3 - "Destroy Infra": Already have image: hashicorp/terraform:1.0.0
Finished Step #3 - "Destroy Infra"
PUSH
DONE
Step #2 - "tf plan and apply": 
